import React from 'react';

export interface LogoProps {
  /** Width of the SVG (number or string, e.g. 1000 or '50%') */
  width?: number | string;
  /** Height of the SVG (number or string, e.g. 1000 or '50%') */
  height?: number | string;
  /** Array of fill colors for each <path> in the SVG */
  colors?: string[];
  /** Optional CSS class for styling */
  className?: string;
}

export const Logo: React.FC<LogoProps> = ({
  width = 1000,
  height = 1000,
  colors = ['#4f39f6'],
  className = ''
}) => {
  // Use first color for the single <path>. Extend for multiple paths if needed.
  const fillColor = colors[0];

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={width}
      height={height}
      viewBox="0 0 750 749.999995"
      preserveAspectRatio="xMidYMid meet"
      className={className}
    >
      <defs>
        <clipPath id="logo-clip">
          <path
            d="M 75 9.144531 L 675 9.144531 L 675 741 L 75 741 Z M 75 9.144531"
            clipRule="nonzero"
          />
        </clipPath>
      </defs>
      <g clipPath="url(#logo-clip)">
        <path
          fill={fillColor}
          fillOpacity={1}
          fillRule="nonzero"
          d="M 261.402344 541.226562 L 481.433594 541.226562 C 500 541.226562 515.058594 556.285156 515.058594 574.855469 C 515.058594 592.980469 500 608.039062 481.433594 608.039062 L 261.402344 608.039062 C 243.273438 608.039062 228.214844 592.980469 228.214844 574.855469 C 228.214844 556.140625 243.273438 541.226562 261.402344 541.226562 Z M 195.175781 489.914062 C 203.949219 498.683594 203.949219 512.71875 195.175781 521.492188 C 186.402344 530.261719 171.929688 530.261719 163.011719 521.492188 C 135.085938 493.566406 112.867188 460.378906 97.808594 424.121094 C 83.332031 388.011719 75 349.121094 75 309.796875 C 75 226.902344 108.625 151.902344 163.011719 97.515625 C 217.398438 43.128906 292.398438 9.503906 375.292969 9.503906 C 457.601562 9.503906 532.601562 43.128906 586.988281 97.515625 C 641.375 151.902344 675 226.902344 675 309.796875 C 675 349.121094 667.25 388.011719 652.191406 424.269531 C 637.132812 460.527344 614.914062 493.714844 586.988281 521.636719 C 578.214844 530.410156 564.179688 530.410156 555.410156 521.636719 C 546.050781 512.867188 546.050781 498.832031 555.410156 490.058594 C 579.238281 465.789062 597.808594 437.71875 610.234375 407.164062 C 623.246094 376.609375 629.972656 343.421875 629.972656 309.796875 C 629.972656 239.328125 601.460938 175.730469 555.410156 129.679688 C 508.773438 83.625 445.175781 54.679688 375.292969 54.679688 C 304.824219 54.679688 241.226562 83.625 195.175781 129.679688 C 149.121094 175.730469 120.175781 239.472656 120.175781 309.796875 C 120.175781 343.421875 126.902344 376.609375 139.914062 407.164062 C 152.191406 437.574219 170.761719 465.644531 195.175781 489.914062 Z M 375.292969 90.203125 C 495.90625 90.203125 594.296875 188.011719 594.296875 309.210938 C 594.296875 396.636719 542.984375 471.785156 469.589844 507.015625 L 469.589844 521.050781 L 449.855469 521.050781 L 449.855469 471.34375 C 458.625 467.25 464.914062 457.894531 464.914062 447.074219 C 464.914062 432.601562 453.070312 420.613281 438.449219 420.613281 C 423.832031 420.613281 411.988281 432.457031 411.988281 447.074219 C 411.988281 457.894531 418.128906 467.25 427.046875 471.34375 L 427.046875 521.050781 L 386.109375 521.050781 L 386.109375 436.695312 L 444.152344 379.238281 C 446.199219 379.824219 448.832031 379.824219 450.878906 379.824219 C 465.351562 379.824219 477.339844 367.980469 477.339844 353.363281 C 477.339844 338.304688 465.496094 326.460938 450.878906 326.460938 C 436.257812 326.460938 424.414062 338.304688 424.414062 353.363281 C 424.414062 357.457031 425 361.109375 426.460938 364.765625 L 386.109375 405.117188 L 386.109375 331.578125 C 395.46875 326.902344 401.609375 318.128906 401.609375 307.308594 C 401.609375 292.835938 389.765625 280.847656 375.144531 280.847656 C 360.085938 280.847656 348.246094 292.691406 348.246094 307.308594 C 348.246094 318.128906 354.386719 327.046875 363.742188 331.578125 L 363.742188 521.050781 L 322.808594 521.050781 L 322.808594 407.75 C 331.578125 403.65625 337.867188 394.296875 337.867188 383.917969 C 337.867188 369.445312 326.023438 357.457031 311.402344 357.457031 C 296.785156 357.457031 284.941406 369.296875 284.941406 383.917969 C 284.941406 394.296875 291.082031 403.65625 300 407.75 L 300 521.050781 L 280.261719 521.050781 L 280.261719 507.015625 C 207.015625 471.785156 155.703125 396.785156 155.703125 309.210938 C 155.703125 188.15625 254.09375 90.203125 375.292969 90.203125 Z M 299.707031 629.679688 L 443.566406 629.679688 C 461.695312 629.679688 476.753906 644.738281 476.753906 662.867188 C 476.753906 681.433594 461.695312 696.492188 443.566406 696.492188 L 412.574219 696.492188 C 412.574219 697.515625 412.574219 687.71875 412.574219 699.5625 C 412.574219 711.402344 394.445312 740.496094 371.636719 740.496094 C 348.832031 740.496094 330.261719 711.550781 330.261719 699.5625 C 330.261719 687.71875 330.261719 697.515625 330.261719 696.492188 L 299.707031 696.492188 C 281.140625 696.492188 266.082031 681.433594 266.082031 662.867188 C 266.082031 644.738281 280.992188 629.679688 299.707031 629.679688 Z M 299.707031 629.679688"
        />
      </g>
    </svg>
  );
};